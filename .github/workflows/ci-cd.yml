name: CI Workflow

on:
  push:
    branches: [ "CI/CD_C#2.0" ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./CSharpAPI/CSharpAPI.csproj

      - name: Build solution
        run: dotnet build ./CSharpAPI/CSharpAPI.csproj --configuration Release --no-restore

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./CSharpAPI/bin/Release

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./CSharpAPI/bin/Release

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Run integration tests with coverage
        run: |
          dotnet test ./Integrationtest/Integrationtest.csproj \
            --collect:"XPlat Code Coverage" \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Detailed Coverage Report
        run: |
          reportgenerator \
            -reports:"**/coverage.opencover.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:MarkdownSummary \
            -classfilters:"+*Tests*" \
            -historydir:"coverage-history"

      - name: Add Coverage Summary to GitHub Actions
        run: |
          echo "## Integration Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          cat coverage-report/Summary.md >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-report
