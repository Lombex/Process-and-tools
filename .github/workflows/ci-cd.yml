name: CI Workflow

on:
  push:
    branches: [ "CI/CD_C#2.0" ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./CSharpAPI/CSharpAPI.csproj

      - name: Run tests with coverage
        run: |
          dotnet test ./Integration_Testing/Integration_Testing.csproj \
            --collect:"XPlat Code Coverage" \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Markdown Coverage Report
        run: |
          reportgenerator \
            -reports:"**/coverage.opencover.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:MarkdownSummary
          cat coverage-report/Summary.md >> $GITHUB_STEP_SUMMARY

      - name: Fail if Coverage is Below 80%
        run: |
          COVERAGE=$(grep "Line coverage" coverage-report/Summary.md | awk '{print $3}' | tr -d '%')
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Code coverage is below 80%. Current: $COVERAGE%"
            exit 1
          else
            echo "Code coverage is sufficient: $COVERAGE%"
          fi
